/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.66
 * Generated at: 2021-08-02 02:58:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loginPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String newreview = request.getParameter("newreview");
	String newauction = request.getParameter("newauction");
	String newnormal = request.getParameter("newnormal");
	String myusedpage = request.getParameter("myusedpage");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>북적북적</title>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Serif+KR&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("* { font-family: 'Noto Serif KR', serif; }\r\n");
      out.write("h1 {\r\n");
      out.write("	font-size : 52pt;\r\n");
      out.write("	color: #08088A;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write(".loginForm {\r\n");
      out.write("	width: 500px;\r\n");
      out.write("	height: 185px;\r\n");
      out.write("	border: 3px solid #8181F7;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	-webkit-border-radius: 10px;\r\n");
      out.write("}\r\n");
      out.write("form .loginForm {\r\n");
      out.write("	font-size: 16pt;\r\n");
      out.write("	color: #8181F7;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin: 10px;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("form .loginForm input.pos {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	width: 300px;\r\n");
      out.write("	height: 25px;	\r\n");
      out.write("	color: #8181F7;\r\n");
      out.write("	font-size: 14pt;\r\n");
      out.write("}\r\n");
      out.write("form .loginForm .login {\r\n");
      out.write("	margin: 10px;\r\n");
      out.write("	width: 150px;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	color: white;\r\n");
      out.write("	font-size: 16pt;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	background-color: #8181F7;\r\n");
      out.write("	-webkit-border-radius: 10px;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("form .loginForm .enroll {\r\n");
      out.write("	margin: 10px;\r\n");
      out.write("	width: 150px;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	color: white;\r\n");
      out.write("	font-size: 16pt;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	background-color: #8181F7;\r\n");
      out.write("	-webkit-border-radius: 10px;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("form .loginForm a {\r\n");
      out.write("	left: 200px;\r\n");
      out.write("}\r\n");
      out.write("input#uid, input#upwd {\r\n");
      out.write("	border: 2px solid #8181F7;\r\n");
      out.write("	-webkit-border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write(".eachtitle {\r\n");
      out.write("	margin-top: 0px;\r\n");
      out.write("	margin-bottom: 0px;\r\n");
      out.write("}\r\n");
      out.write(".findlink {\r\n");
      out.write("	font-size: 12pt;\r\n");
      out.write("	border: none;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: #8181F7;\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action=\"/bookjeok/ulogin\" method=\"post\">\r\n");
 if(newreview != null) { 
      out.write("\r\n");
      out.write("<input type=\"hidden\" name=\"newreview\" value=\"리뷰등록하기\">\r\n");
 } 
      out.write('\r');
      out.write('\n');
 if(newauction != null) { 
      out.write("\r\n");
      out.write("<input type=\"hidden\" name=\"newauction\" value=\"경매등록하기\">\r\n");
 } 
      out.write('\r');
      out.write('\n');
 if(newnormal != null) { 
      out.write("\r\n");
      out.write("<input type=\"hidden\" name=\"newnormal\" value=\"경매등록하기\">\r\n");
 } 
      out.write('\r');
      out.write('\n');
 if(myusedpage != null) { 
      out.write("\r\n");
      out.write("<input type=\"hidden\" name=\"myusedpage\" value=\"내장터\">\r\n");
 } 
      out.write("\r\n");
      out.write("<table align=\"center\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\"><h1 style=\"margin-bottom: 0px; font-size: 28pt;\"><img src=\"/bookjeok/resources/bookjeok/bookjeok.png\" onclick=\"javascript:location.href='/bookjeok/index.jsp'\"><br>로그인</h1></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td><table class=\"loginForm\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"center\" width=\"150px\"><h3 class=\"eachtitle\">아이디 : </h3></td>\r\n");
      out.write("				<td><input type=\"text\" name=\"userid\" id=\"uid\" class=\"pos\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"center\"><h3 class=\"eachtitle\">암 호 : </h3></td>\r\n");
      out.write("				<td><input type=\"password\" name=\"userpwd\" id=\"upwd\" class=\"pos\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" align=\"right\">\r\n");
      out.write("					<input type=\"button\" name=\"findlink\" class=\"findlink\" value=\"아이디 찾기\" \r\n");
      out.write("						onClick=\"window.open('/bookjeok/views/user/userFindIdView.jsp', \r\n");
      out.write("							'findIdWindow', 'width=650, height=550, scrollbars=no, resizable=no, status=no, menubar=no, toolbar=no');\">\r\n");
      out.write("					<input type=\"button\" name=\"findlink\" class=\"findlink\" value=\"암호 찾기\" \r\n");
      out.write("						onClick=\"window.open('/bookjeok/views/user/userFindPwdView.jsp', \r\n");
      out.write("							'findPwdWindow', 'width=650, height=550, scrollbars=no, resizable=no, status=no, menubar=no, toolbar=no');\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" align=\"center\"><input type=\"submit\" value=\"로그인\" class=\"login\">\r\n");
      out.write("				<input type=\"button\" name=\"enroll\" class=\"enroll\" value=\"회원가입\" onClick=\"location.href='enrollPage.html'\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table></td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
